@model WebProductManagement.Models.Category

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

<div class="row">
    <div class="col-4">
        <img src="~/Content/assets/images/@Model.Image" class="w-100 rounded" />
    </div>
    <div class="col-8">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Image, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.IsStatus, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.IsStatus)
                            @Html.ValidationMessageFor(model => model.IsStatus, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                @{

                    if (TempData["Message"]!=null)
                    {
                        int message = Convert.ToInt32(TempData["Message"]);
                        string[,] output = {
                    { "text-dark","text-white"},
                    { "bg-danger","bg-success"},
                    { "Düzenleme Başarısız","Düzenleme Başarılı"},
            };

                <label class="@output[0,message] @output[1,message]"> @output[2, message] </label>
            };
                }

                @*<label class="text-succes" @(message == "1" ? "success" : message == "0" ? "danger" : "" )>
                    @(message == "1" ? "Düzenleme Başarılı" : message == "0" ? "Düzenleme Başarısız" : "" )
                </label>*@



                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="btn btn-success" />
                        <a class="btn btn-primary" href="~/Views/Category/Index.cshtml">Back To List</a>
                    </div>
                </div>

            </div>
        }

        <div>
            @Html.ActionLink("Back to List", "Index")
        </div>
    </div>
</div>



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
